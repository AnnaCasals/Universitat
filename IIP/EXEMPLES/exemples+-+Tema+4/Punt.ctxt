#BlueJ class context
comment0.params=abs\ ord
comment0.target=Punt(double,\ double)
comment0.text=\ Crea\ un\ punt\ (abs,\ ord),\ que\ incrementa\ en\ 1\ \r\n\ \ el\ n\u00FAmero\ de\ punts\ creats.\ \r\n\ \ @param\ abs\ double\ que\ representa\ l'abscissa.\r\n\ \ @param\ ord\ double\ que\ representa\ l'ordenada.\r\n
comment1.params=
comment1.target=Punt()
comment1.text=\ Crea\ un\ punt\ est\u00E0ndard,\ i.e.,\ el\ (0.0,\ 0.0),\r\n\ \ que\ incrementa\ en\ 1\ el\ n\u00FAmero\ de\ punts\ creats.\r\n
comment10.params=
comment10.target=double\ distOrigen()
comment10.text=\ Torna\ la\ dist\u00E0ncia\ del\ Punt\ a\ l'origen\ de\ coordenades.\ \r\n\ \ @return\ double,\ la\ dist\u00E0ncia.\r\n
comment11.params=p
comment11.target=double\ distancia(Punt)
comment11.text=\r\n\ Torna\ la\ dist\u00E0ncia\ entre\ un\ Punt\ p\ donat\ i\ el\ Punt\ actual.\r\n\ @param\ p\ Punt.\r\n\ @return\ double,\ la\ dist\u00E0ncia.\r\n
comment12.params=
comment12.target=int\ numPunts()
comment12.text=\ Torna\ el\ nombre\ d'objectes\ Punt\ creats.\ \r\n\ \ @return\ int,\ nombre\ de\ Punts.\r\n
comment13.params=a\ r
comment13.target=Punt\ polarsAPunt(double,\ double)
comment13.text=\ Torna\ un\ Punt\ a\ partir\ de\ les\ coordenades\ polars,\ \r\n\ \ la\ dist\u00E0ncia\ del\ qual\ a\ l'origen\ es\ r\ i\ amb\ angle\ a\ \r\n\ \ respecte\ a\ l'eix\ X.\ \r\n\ \ @param\ a\ double\ que\ representa\ l'angle\ respecte\ a\ l'eix\ X.\r\n\ \ @param\ r\ double\ que\ representa\ la\ dist\u00E0ncia\ a\ l'origen.\r\n\ \ @return\ Punt,\ el\ Punt\ resultat.\r\n
comment2.params=p
comment2.target=Punt(Punt)
comment2.text=\ Crea\ un\ punt\ amb\ les\ mateixes\ coordenades\ que\ \r\n\ \ un\ altre\ Punt\ p\ donat.\ Incrementa\ en\ 1\ el\ n\u00FAmero\ \r\n\ \ de\ punts\ creats.\r\n\ \ @param\ p\ Punt.\r\n
comment3.params=
comment3.target=double\ getX()
comment3.text=\ Torna\ l'abscissa\ del\ Punt.\ \ \r\n\ \ @return\ double,\ l'abscissa.\r\n
comment4.params=
comment4.target=double\ getY()
comment4.text=\ Torna\ l'ordenada\ del\ Punt.\ \ \r\n\ \ @return\ double,\ l'ordenada.\ \ \r\n
comment5.params=px
comment5.target=void\ setX(double)
comment5.text=\ Actualitza\ l'abscissa\ del\ Punt.\ \ \r\n\ \ @param\ px\ double\ que\ representa\ el\ nou\ valor\ de\ l'abscissa.\ \r\n
comment6.params=py
comment6.target=void\ setY(double)
comment6.text=\ Actualitza\ l'ordenada\ del\ Punt.\ \ \r\n\ \ @param\ py\ double\ que\ representa\ el\ nou\ valor\ de\ l'ordenada.\ \ \ \r\n
comment7.params=px\ py
comment7.target=void\ moure(double,\ double)
comment7.text=\ Despla\u00E7a\ el\ Punt,\ incrementant\ l'abscissa\ i\ l'ordenada\r\n\ten\ dos\ valors\ donats.\ \r\n\ \ @param\ px\ double\ que\ representa\ l'increment\ de\ l'abscissa.\r\n\ \ @param\ py\ double\ que\ representa\ l'increment\ de\ l'ordenada.\r\n
comment8.params=
comment8.target=int\ aleatori()
comment8.text=\ M\u00E8tode\ privat\ que\ torna\ un\ valor\ enter\ aleatori\ en\ \ \r\nel\ rang\ [0,\ (2\ *\ dist\u00E0ncia\ del\ punt\ a\ l'origen)].
comment9.params=
comment9.target=void\ moureAleat()
comment9.text=Despla\u00E7a\ el\ Punt\ a\ unes\ coordenades\ aleatories.
numComments=14
